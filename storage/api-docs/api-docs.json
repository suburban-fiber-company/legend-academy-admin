{
    "openapi": "3.0.0",
    "info": {
        "title": "Legend Academy API Documentation",
        "description": "Legend Pay API description",
        "contact": {
            "email": "o.oyedele@suburbanfiberco.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get list of courses",
                "description": "Returns list of courses",
                "operationId": "getCoursesList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Course"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Store new course",
                "description": "Returns course data",
                "operationId": "storeCourse",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseModule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/courses-modules": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get list of courses with modules",
                "description": "Returns list of courses with modules",
                "operationId": "Course Modules",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CourseModule"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get Course information",
                "description": "Returns course data",
                "operationId": "getCourseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course  Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CourseModule"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update existing course",
                "description": "Returns updated course data",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Course"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete existing course",
                "description": "Deletes a record and returns no data",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/courses/{id}/modules": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get Course information",
                "description": "Returns course data",
                "operationId": "getCourseModuleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Module Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Module"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/publish-course/{id}": {
            "patch": {
                "tags": [
                    "Courses"
                ],
                "summary": "Publish a course",
                "description": "Returns no course data",
                "operationId": "publishCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Course Published Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/departments": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get list of department",
                "description": "Returns list of departments",
                "operationId": "getDepartmentsList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Departments Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DepartmentUnit"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Departments"
                ],
                "summary": "Store new department",
                "description": "Returns department data",
                "operationId": "storeDepartment",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Department created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/departments/{id}": {
            "get": {
                "tags": [
                    "Departments"
                ],
                "summary": "Get Department information",
                "description": "Returns departments data",
                "operationId": "getDepartmentById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Department Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DepartmentUnit"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Departments"
                ],
                "summary": "Update existing department",
                "description": "Returns updated department data",
                "operationId": "updateDepartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDepartmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Department Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Department"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Departments"
                ],
                "summary": "Delete existing department",
                "description": "Deletes a record and returns no success message",
                "operationId": "deleteDepartment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Department id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Department Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/modules": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Get list of module",
                "description": "Returns list of modules",
                "operationId": "getModulesList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Modules Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Module"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Modules"
                ],
                "summary": "Store new course module",
                "description": "Returns course module data",
                "operationId": "storeModule",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Module created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Module"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/modules/{id}": {
            "get": {
                "tags": [
                    "Modules"
                ],
                "summary": "Get Module information",
                "description": "Returns modules data",
                "operationId": "getModuleById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Module Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Module"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Modules"
                ],
                "summary": "Update existing module",
                "description": "Returns updated module data",
                "operationId": "updateModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateModuleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Module Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Module"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Modules"
                ],
                "summary": "Delete existing module",
                "description": "Deletes a record and returns no success message",
                "operationId": "deleteModule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Module id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Module Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/pages": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get list of module pages",
                "description": "Returns list of module pages",
                "operationId": "getPagesList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Pages Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Page"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Pages"
                ],
                "summary": "Store new course module page",
                "description": "Returns course module page data",
                "operationId": "storePage",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Page created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/pages/{id}": {
            "get": {
                "tags": [
                    "Pages"
                ],
                "summary": "Get Module Page information",
                "description": "Returns module page data",
                "operationId": "getPageById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Page Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Pages"
                ],
                "summary": "Update existing module page",
                "description": "Returns updated module page data",
                "operationId": "updatePage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Page Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Pages"
                ],
                "summary": "Delete existing module page",
                "description": "Deletes a record and returns no success message",
                "operationId": "deletePage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Page id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Page Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/questions": {
            "get": {
                "tags": [
                    "QuizQuestion"
                ],
                "summary": "Get list of questions",
                "description": "Returns list of questions",
                "operationId": "getQuestionList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "QuizQuestion"
                ],
                "summary": "Store new question",
                "description": "Returns question data",
                "operationId": "storeQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreQuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/questions/{id}": {
            "get": {
                "tags": [
                    "QuizQuestion"
                ],
                "summary": "Get Question information",
                "description": "Returns question data",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "QuizQuestion"
                ],
                "summary": "Update existing question",
                "description": "Returns updated question data",
                "operationId": "updateQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateQuestionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Question"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "QuizQuestion"
                ],
                "summary": "Delete existing question",
                "description": "Deletes a record and returns no success message",
                "operationId": "deleteQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Question id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/options/questions": {
            "get": {
                "tags": [
                    "QuizQuestionOption"
                ],
                "summary": "Get list of question options",
                "description": "Returns list of question options",
                "operationId": "getQuestionOptionList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/QuestionOption"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/options/questions/{id}": {
            "get": {
                "tags": [
                    "QuizQuestionOption"
                ],
                "summary": "Get Question option information",
                "description": "Returns question option data",
                "operationId": "getQuestionOptionsById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QuestionOption ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionOption"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "QuizQuestionOption"
                ],
                "summary": "Update existing question option",
                "description": "Returns updated question option data",
                "operationId": "updateQuestionOption",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QuestionOption id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateQuestionOptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/QuestionOption"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "QuizQuestionOption"
                ],
                "summary": "Delete existing question option",
                "description": "Deletes a record and returns no success message",
                "operationId": "deleteQuestionOption",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "QuestionOption id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Returns user data",
                "operationId": "Registration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Registration Successful"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Returns user data",
                "operationId": "Login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "email",
                                        "type": "string",
                                        "example": "example@gmail.com"
                                    },
                                    "password": {
                                        "description": "email",
                                        "type": "string",
                                        "example": "12345678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Login Successful"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/LoginResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v1/units": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Get list of department units",
                "description": "Returns list of department units",
                "operationId": "getUnitsList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "units Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Unit"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Units"
                ],
                "summary": "Store new department unit",
                "description": "Returns department unit data",
                "operationId": "storeUnit",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Unit created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Unit"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/units/{id}": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Get department unit information",
                "description": "Returns department unit data",
                "operationId": "getUnitById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Unit Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Unit"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Units"
                ],
                "summary": "Update existing department unit",
                "description": "Returns updated department unit data",
                "operationId": "updateUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUnitRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Page Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Unit"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Units"
                ],
                "summary": "Delete existing department unit",
                "description": "Deletes a record and returns no data",
                "operationId": "deleteUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unit id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Unit Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUserList",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "Users Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store new user",
                "description": "Returns user data",
                "operationId": "storeUser",
                "parameters": [
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "User Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "User Updated Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no success message",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "User Deleted Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/courses": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User information",
                "description": "Returns user with courses data",
                "operationId": "getUserCourseById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bearer_token",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "message",
                                            "type": "string",
                                            "example": "User Course Retrieved Successfully"
                                        },
                                        "success": {
                                            "description": "success",
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserCourse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Course": {
                "title": "Course",
                "description": "Course model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new course",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "number_of_modules": {
                        "title": "Number Of Modules",
                        "description": "Total Number Of Modules",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "number_enrolled": {
                        "title": "Number Of Enrolled",
                        "description": "Total Number Of Enrolled Student",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "unit_id": {
                        "title": "Unit ID",
                        "description": "Department unit ID of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": "Published"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Course"
                }
            },
            "CourseModule": {
                "title": "CourseModule",
                "description": "Course module model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new course",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "number_of_modules": {
                        "title": "Number Of Modules",
                        "description": "Total Number Of Modules",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "number_enrolled": {
                        "title": "Number Of Enrolled",
                        "description": "Total Number Of Enrolled Student",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "unit_id": {
                        "title": "Unit ID",
                        "description": "Department unit ID of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": "Published"
                    },
                    "modules": {
                        "title": "Module",
                        "description": "Module model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CourseModule"
                }
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the department course",
                        "type": "string",
                        "example": "Software"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Depertment"
                }
            },
            "DepartmentUnit": {
                "title": "DepartmentUnit",
                "description": "DepartmentUnit model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the department course",
                        "type": "string",
                        "example": "Software"
                    },
                    "units": {
                        "title": "Unit",
                        "description": "Unit model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Unit"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Depertment unit"
                }
            },
            "Module": {
                "title": "Module",
                "description": "Module model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Name",
                        "description": "Title of the new course module",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "pages": {
                        "title": "Page",
                        "description": "Page model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Module"
                }
            },
            "Page": {
                "title": "Page",
                "description": "Page model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "title": {
                        "title": "Title",
                        "description": "Title of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Content of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Page Model"
                }
            },
            "Question": {
                "title": "Question",
                "description": "Question model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question_text": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "What is Laravel"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "time_limit": {
                        "title": "Time Limit",
                        "description": "Time Limit (sec) of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question_options": {
                        "title": "QuestionOption",
                        "description": "QuestionOption model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QuestionOption"
                        }
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Question"
                }
            },
            "QuestionOption": {
                "title": "Question",
                "description": "Question model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "option": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "Laravel is an MVC"
                    },
                    "correct": {
                        "title": "Correct answer",
                        "description": "To determine if this option is correct",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    },
                    "question_id": {
                        "title": "Question ID",
                        "description": "Question id of the new question option",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Question"
                }
            },
            "Unit": {
                "title": "Unit",
                "description": "Unit model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the new department unit",
                        "type": "string",
                        "example": "finance"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department id of the new department",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Unit Model"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Full Name of the new user",
                        "type": "string",
                        "example": "Jame Prince"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the new user",
                        "type": "string",
                        "example": "example@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "12345678"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone of the new User",
                        "type": "string",
                        "example": "0816155633"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the new user",
                        "type": "string",
                        "example": "25 uloho street"
                    },
                    "user_type": {
                        "title": "User Type",
                        "description": "User Type of the new user",
                        "type": "string",
                        "example": "User"
                    },
                    "profile_image": {
                        "title": "Profile Image",
                        "description": "Profile Image of the new user",
                        "type": "string"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "User"
                }
            },
            "UserCourse": {
                "title": "UserCourse",
                "description": "User course model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Full Name of the new user",
                        "type": "string",
                        "example": "Jame Prince"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the new user",
                        "type": "string",
                        "example": "james@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "6464hh88"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone of the new User",
                        "type": "string",
                        "example": "0816155633"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the new user",
                        "type": "string",
                        "example": "25 uloho street"
                    },
                    "user_type": {
                        "title": "User Type",
                        "description": "User Type of the new user",
                        "type": "string",
                        "example": "User"
                    },
                    "profile_image": {
                        "title": "Profile Image",
                        "description": "Profile Image of the new user",
                        "type": "string"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "courses": {
                        "title": "Course",
                        "description": "Course model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Course"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCourse"
                }
            },
            "StoreCourseRequest": {
                "title": "Store Course request",
                "description": "Store Course request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new course",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "unit_id": {
                        "title": "Unit ID",
                        "description": "Department unit ID of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreDepartmentRequest": {
                "title": "Store Department request",
                "description": "Store Department request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new department",
                        "type": "string",
                        "example": "Software"
                    }
                },
                "type": "object"
            },
            "StoreModuleRequest": {
                "title": "Store Course Module request",
                "description": "Store Course Module request body data",
                "properties": {
                    "title": {
                        "title": "Name",
                        "description": "Title of the new course module",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StorePageRequest": {
                "title": "Store Course Module Page request",
                "description": "Store Course Module page request body data",
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Content of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreQuestionOptionRequest": {
                "title": "Store Question Option request",
                "description": "Store Question option request body data",
                "properties": {
                    "option": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "Laravel is an MVC"
                    },
                    "correct": {
                        "title": "Correct answer",
                        "description": "To determine if this option is correct, 1 is correct answer",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "StoreQuestionRequest": {
                "title": "Store Question request",
                "description": "Store Question request body data",
                "properties": {
                    "question_text": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "What is Laravel"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "time_limit": {
                        "title": "Time Limit",
                        "description": "Time Limit (sec) of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "question_options": {
                        "title": "QuestionOption",
                        "description": "QuestionOption model",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StoreQuestionOptionRequest"
                        }
                    }
                },
                "type": "object"
            },
            "StoreUnitRequest": {
                "title": "Store department unit request",
                "description": "Store department unit request body data",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new department unit",
                        "type": "string",
                        "example": "finance"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department id of the new department unit",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Full Name of the new user",
                        "type": "string",
                        "example": "Jame Prince"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the new user",
                        "type": "string",
                        "example": "example@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "12345678"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone of the new User",
                        "type": "string",
                        "example": "0816155633"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the new user",
                        "type": "string",
                        "example": "25 uloho street"
                    },
                    "user_type": {
                        "title": "User Type",
                        "description": "User Type of the new user",
                        "type": "string",
                        "example": "User"
                    },
                    "profile_image": {
                        "title": "Profile Image",
                        "description": "Profile Image of the new user",
                        "type": "string"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateCourseRequest": {
                "title": "Store Course request",
                "description": "Store Course request body data",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new course",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "user_id": {
                        "title": "User ID",
                        "description": "User's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "unit_id": {
                        "title": "Unit ID",
                        "description": "Department unit ID of the new course",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateDepartmentRequest": {
                "title": "Store Department request",
                "description": "Store Department request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new department",
                        "type": "string",
                        "example": "Software"
                    }
                },
                "type": "object"
            },
            "UpdateModuleRequest": {
                "title": "Store Course Module request",
                "description": "Store Course Module request body data",
                "properties": {
                    "title": {
                        "title": "Name",
                        "description": "Title of the new course module",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdatePageRequest": {
                "title": "Store Course Module Page request",
                "description": "Store Course Module page request body data",
                "properties": {
                    "title": {
                        "title": "Title",
                        "description": "Title of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "content": {
                        "title": "Content",
                        "description": "Content of the new course module page",
                        "type": "string",
                        "example": "Introduction to workpkace"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new course module page",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateQuestionOptionRequest": {
                "title": "Update Question Option request",
                "description": "Store Question option request body data",
                "properties": {
                    "option": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "Laravel is an MVC"
                    },
                    "correct": {
                        "title": "Correct answer",
                        "description": "To determine if this option is correct, 1 is correct answer",
                        "type": "integer",
                        "format": "int64",
                        "example": 0
                    }
                },
                "type": "object"
            },
            "UpdateQuestionRequest": {
                "title": "Store Question request",
                "description": "Store Question request body data",
                "properties": {
                    "question_text": {
                        "title": "Question Text",
                        "description": "Question Text of the new Question",
                        "type": "string",
                        "example": "What is Laravel"
                    },
                    "course_id": {
                        "title": "Course ID",
                        "description": "Course id of the new question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "module_id": {
                        "title": "Module ID",
                        "description": "Module id of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "time_limit": {
                        "title": "Time Limit",
                        "description": "Time Limit (sec) of the new Question",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateUnitRequest": {
                "title": "Update department unit request",
                "description": "updatedepartment unit request body data",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the new department unit",
                        "type": "string",
                        "example": "finance"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department id of the new department unit",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Full Name of the new user",
                        "type": "string",
                        "example": "Jame Prince"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the new user",
                        "type": "string",
                        "example": "james@gmail.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the new user",
                        "type": "string",
                        "example": "6464hh88"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone of the new User",
                        "type": "string",
                        "example": "0816155633"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the new user",
                        "type": "string",
                        "example": "25 uloho street"
                    },
                    "user_type": {
                        "title": "User Type",
                        "description": "User Type of the new user",
                        "type": "string",
                        "example": "User"
                    },
                    "profile_image": {
                        "title": "Profile Image",
                        "description": "Profile Image of the new user",
                        "type": "string"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "CourseModuleResource": {
                "title": "CourseResource",
                "description": "Course resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CourseModule"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CourseResource"
                }
            },
            "CourseResource": {
                "title": "CourseResource",
                "description": "Course resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Course"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CourseResource"
                }
            },
            "DepartmentResource": {
                "title": "DepartmentResource",
                "description": "Department resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Department"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "DepartmentResource"
                }
            },
            "LoginResource": {
                "title": "LoginResource",
                "description": "Login resource",
                "properties": {
                    "token": {
                        "title": "token",
                        "description": "access token",
                        "type": "string",
                        "example": "fjfjfjfjfuf74fjffhfhfhshgfaga"
                    },
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Full Name of the new user",
                        "type": "string",
                        "example": "Jame Prince"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the new user",
                        "type": "string",
                        "example": "example@gmail.com"
                    },
                    "phone_number": {
                        "title": "Phone Number",
                        "description": "Phone of the new User",
                        "type": "string",
                        "example": "0816155633"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Address of the new user",
                        "type": "string",
                        "example": "25 uloho street"
                    },
                    "user_type": {
                        "title": "User Type",
                        "description": "User Type of the new user",
                        "type": "string",
                        "example": "User"
                    },
                    "profile_image": {
                        "title": "Profile Image",
                        "description": "Profile Image of the new user",
                        "type": "string"
                    },
                    "department_id": {
                        "title": "Department ID",
                        "description": "Department's id of the new user",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "LoginResource"
                }
            },
            "ModulePageResource": {
                "title": "ModulePageResource",
                "description": "Course resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ModulePageResource"
                }
            },
            "ModuleResource": {
                "title": "ModuleResource",
                "description": "Module resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Module"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ModuleResource"
                }
            },
            "PageResource": {
                "title": "CourseResource",
                "description": "Course resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Page"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CourseResource"
                }
            },
            "QuestionOptionResource": {
                "title": "QuestionOptionResource",
                "description": "Question option resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "$ref": "#/components/schemas/QuestionOption"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "QuestionOptionResource"
                }
            },
            "QuestionResource": {
                "title": "QuestionResource",
                "description": "Question resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Question"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "QuestionResource"
                }
            },
            "UserCourseResource": {
                "title": "UserCourseResource",
                "description": "UserCourse resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCourseResource"
                }
            },
            "UserResource": {
                "title": "CourseResource",
                "description": "Course resource",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "success",
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "CourseResource"
                }
            }
        }
    }
}